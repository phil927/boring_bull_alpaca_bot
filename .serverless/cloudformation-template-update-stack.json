{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "StockDashtraderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/stocks-with-serverless-dev-stock-trader"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "stocks-with-serverless",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stocks-with-serverless-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stocks-with-serverless-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "SNS:CreateTopic"
                  ],
                  "Resource": {
                    "Ref": "StockTraderError"
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "stocks-with-serverless",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "StockDashtraderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": "550387453888.dkr.ecr.us-east-1.amazonaws.com/serverless-stocks-with-serverless-dev@sha256:f5dbfe53dce5707e6dc4245e2fa96ce64d82a38b8c63ed8e32241dd01fea054f"
        },
        "ImageConfig": {
          "Command": [
            "handler.lambda_handler"
          ],
          "EntryPoint": [
            "/lambda-entrypoint.sh"
          ]
        },
        "PackageType": "Image",
        "FunctionName": "stocks-with-serverless-dev-stock-trader",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "StockDashtraderLogGroup"
      ]
    },
    "StockDashtraderLambdaVersionMsDHhqpkk0WOJuhwLqwllxpeWnnM5aWcbfxnloWYHc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StockDashtraderLambdaFunction"
        },
        "CodeSha256": "f5dbfe53dce5707e6dc4245e2fa96ce64d82a38b8c63ed8e32241dd01fea054f"
      }
    },
    "StockDashtraderEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 19-20 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "StockDashtraderLambdaFunction",
                "Arn"
              ]
            },
            "Id": "stock-traderSchedule"
          }
        ]
      }
    },
    "StockDashtraderLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "StockDashtraderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "StockDashtraderEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "StockTraderError": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "Stock-Trader-Error"
      }
    },
    "StockTraderErrorSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": "pstephens9275@gmail.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "StockTraderError"
        }
      }
    },
    "TimeStreamDBStockData": {
      "Type": "AWS::Timestream::Database",
      "Properties": {
        "DatabaseName": "StockData"
      }
    },
    "TimeStreamDBStockDataTable": {
      "Type": "AWS::Timestream::Table",
      "DependsOn": [
        "TimeStreamDBStockData"
      ],
      "Properties": {
        "TableName": "StockDataTable",
        "DatabaseName": "StockData"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-stocks-with-serverless-dev-ServerlessDeploymentBucketName"
      }
    },
    "StockDashtraderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StockDashtraderLambdaVersionMsDHhqpkk0WOJuhwLqwllxpeWnnM5aWcbfxnloWYHc"
      },
      "Export": {
        "Name": "sls-stocks-with-serverless-dev-StockDashtraderLambdaFunctionQualifiedArn"
      }
    }
  }
}